name: "build ruby starter"

on: 
  workflow_dispatch:
    inputs:
      version:
        type: choice
        description: "Ruby Version"
        default: "2.7.2"
        options:
          - "2.7.2"
          - "2.7.7"
          - "2.7.8"
          - "3.0.5"
          - "3.0.6"
          - "3.1.3"
          - "3.1.4"
          - "3.2.1"
          - "3.2.2"
      repository:
        type: choice
        description: "Repository"
        default: "gendosu/gentest"
        options:
          - "gendosu/gentest"

env:
  DOCKER_BUILDKIT: 1
  DISABLE_ASSET_SYNC: 1

jobs:
  set-matrix:
    runs-on: ubuntu-latest

    outputs:
      RUBY_DIR: ${{ steps.set-matrix.outputs.RUBY_DIR }}
      RUBY_MAJOR: ${{ steps.set-matrix.outputs.RUBY_MAJOR }}
      RUBY_VERSION: ${{ steps.set-matrix.outputs.RUBY_VERSION }}
      RUBY_SHA: ${{ steps.set-matrix.outputs.RUBY_SHA }}
      RUBY_BASES: ${{ steps.set-matrix.outputs.RUBY_BASES }}

    steps:
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: set-matrix
        id: set-matrix
        run: |
          RUBY_DIR=`cat versions.json | jq -r -c '.[] | select(.RUBY_VERSION == "${{ inputs.version }}") | .RUBY_DIR'`
          RUBY_MAJOR=`cat versions.json | jq -r -c '.[] | select(.RUBY_VERSION == "${{ inputs.version }}") | .RUBY_MAJOR'`
          RUBY_VERSION=`cat versions.json | jq -r -c '.[] | select(.RUBY_VERSION == "${{ inputs.version }}") | .RUBY_VERSION'`
          RUBY_SHA=`cat versions.json | jq -r -c '.[] | select(.RUBY_VERSION == "${{ inputs.version }}") | .sha256'`
          RUBY_BASES=`cat versions.json | jq -r -c '.[] | select(.RUBY_VERSION == "${{ inputs.version }}") | .base'`

          echo "RUBY_DIR=${RUBY_DIR}" >> $GITHUB_OUTPUT
          echo "RUBY_MAJOR=${RUBY_MAJOR}" >> $GITHUB_OUTPUT
          echo "RUBY_VERSION=${RUBY_VERSION}" >> $GITHUB_OUTPUT
          echo "RUBY_SHA=${RUBY_SHA}" >> $GITHUB_OUTPUT
          echo "RUBY_BASES=${RUBY_BASES}" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: set-matrix

    strategy:
      matrix:
        dir: ${{ fromJson(needs.set-matrix.outputs.RUBY_BASES) }}
        arch: ['linux/amd64', 'linux/arm64']

    outputs:
      TAG: ${{ steps.setup.outputs.TAG }}
      DIR: ${{ steps.setup.outputs.DIR }}

    steps:
      -
        name: test
        run: |
          echo ${{needs.set-matrix.outputs.RUBY_DIR}}
          echo ${{needs.set-matrix.outputs.RUBY_MAJOR}}
          echo ${{needs.set-matrix.outputs.RUBY_VERSION}}
          echo ${{needs.set-matrix.outputs.RUBY_SHA}}
          echo ${{needs.set-matrix.outputs.RUBY_BASES}}
          echo ${{ fromJson(needs.set-matrix.outputs.RUBY_BASES) }}
